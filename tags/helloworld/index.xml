<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HelloWorld on Lazytrick</title>
    <link>https://blog.lazytrick.com/tags/helloworld/</link>
    <description>Recent content in HelloWorld on Lazytrick</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2019 Minatu2d</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 22:00:04 +0900</lastBuildDate>
    
	<atom:link href="https://blog.lazytrick.com/tags/helloworld/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>4 Stage khi biên dịch HelloWorld.c</title>
      <link>https://blog.lazytrick.com/post/2017-01-01-4-stage-khi-bien-dich-helloworld-c/</link>
      <pubDate>Sun, 01 Jan 2017 22:00:04 +0900</pubDate>
      
      <guid>https://blog.lazytrick.com/post/2017-01-01-4-stage-khi-bien-dich-helloworld-c/</guid>
      <description>Gần đây, phải giải quyết giúp một vài vấn đề liên quan đến Cross-Compile. Có tìm hiểu kĩ một chú về Compiler, Linker, và Loader.
Bài này xin nói về cơ bản về quá trình biên dịch một file source code (.c) sang dạng chạy được.
Ví dụ: từ HelloWorld.c thành HelloWorld và chạy được như ví dụ dưới đây.
HelloWorld.c
#include int main() { print(&amp;#34;Hello World \n&amp;#34;); return 0; }  Kết quả chạy:</description>
    </item>
    
    <item>
      <title>Một chút hiểu thêm về &#34;Hello World&#34; trong C.</title>
      <link>https://blog.lazytrick.com/post/2016-12-21-mot-chut-hieu-them-ve-hello-world-trong-c/</link>
      <pubDate>Wed, 21 Dec 2016 05:31:09 +0900</pubDate>
      
      <guid>https://blog.lazytrick.com/post/2016-12-21-mot-chut-hieu-them-ve-hello-world-trong-c/</guid>
      <description>Gần đây, gặp một số vấn đề về Loader-Linker giữa môi trường build và môi trường chạy trong Cross-Compiling.
Có thể bất kì chương nào trong Linux cũng vậy. Nhưng chỉ xét một chường trình được build bằng C thì
một chương trình sẽ được chạy 2 cách dưới đây
1. Chương trình hoàn toàn là tĩnh  Không có symbol nào cần phải được (resolved) trước khi chạy. Không yêu cầu bất cứ một thư viện run-time nào.</description>
    </item>
    
    <item>
      <title>[OE]Bitbake - Từ Hello World đến một Distro</title>
      <link>https://blog.lazytrick.com/post/2015-04-25-oebitbake-tu-hello-world-den-mot-distro/</link>
      <pubDate>Sat, 25 Apr 2015 07:50:24 +0900</pubDate>
      
      <guid>https://blog.lazytrick.com/post/2015-04-25-oebitbake-tu-hello-world-den-mot-distro/</guid>
      <description>Bitbake là một công cụ cốt lõi của Yocto Project. Nó bao gồm 1 bộ thông dịch các script được viết trong các file recipe (công thức tạo phần mềm), và thực hiện các lệnh trong đó. Nó mô tả lại và tự động hóa qúa trình người ta đưa một phần mềm vào một distro.
Về việc đưa một phần mềm vào distro, ta có thể thấy nó bao gồm vài step chính.</description>
    </item>
    
  </channel>
</rss>