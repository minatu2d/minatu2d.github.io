<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>YoctoProject on Lazytrick</title>
    <link>localhost:1313/categories/yoctoproject/</link>
    <description>Recent content in YoctoProject on Lazytrick</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Apr 2017 14:29:17 +0900</lastBuildDate>
    
	<atom:link href="localhost:1313/categories/yoctoproject/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>4 thành phần của Embedded Linux</title>
      <link>localhost:1313/post/2017-04-02-4-thanh-phan-cua-embedded-linux/</link>
      <pubDate>Sun, 02 Apr 2017 14:29:17 +0900</pubDate>
      
      <guid>localhost:1313/post/2017-04-02-4-thanh-phan-cua-embedded-linux/</guid>
      <description>&lt;h2&gt;4 thành phần của Embedded Linux&lt;/h2&gt;
&lt;p&gt;Ta biết rằng Linux chạy ở khắp nơi từ siêu máy tính, máy chủ, máy để bàn (máy xách tay), điện thoại (android)...cho đến các thiết bị gia dụng, gia đình.&lt;/p&gt;
&lt;p&gt;Khi sử dụng máy tính cá nhân, server ta dễ dàng &#34;sờ&#34; thấy được các thành phần của Linux như các tiến trình, shell..etc.&lt;br /&gt;
Hầu hết các bản phân phối phổ biến làm hết những thứ liên quan đến phần cứng, nhân hệ điều hành, driver cho ta rồi. Ta thường chỉ quan tâm đến ứng dụng chạy trên đó thôi.&lt;/p&gt;
&lt;p&gt;Nhưng ở một mảng ứng dụng khác của Linux, nơi mà trên đó ta thường chỉ chạy 1 ứng dụng, rất khó thấy các thành phần bên trong, hầu như không thay đổi được...thì Linux như thế nào, nó giống với các bản phân phối ta vẫn gặp không.</description>
    </item>
    
    <item>
      <title>So sánh giữa Buildroot và Yocto Project</title>
      <link>localhost:1313/post/2017-01-20-so-sanh-buildroot-va-yocto-project/</link>
      <pubDate>Fri, 20 Jan 2017 01:22:46 +0900</pubDate>
      
      <guid>localhost:1313/post/2017-01-20-so-sanh-buildroot-va-yocto-project/</guid>
      <description>&lt;p&gt;Bài này sẽ dịch lại &lt;a href=&#34;http://events.linuxfoundation.org/sites/events/files/slides/belloni-petazzoni-buildroot-oe_0.pdf&#34;&gt;Slide&lt;/a&gt; thảo luận giữa 2 diễn giả là Alexandre Belloni, Thomas Petazzoni&lt;br /&gt;
từ Free Electrons tại Embedded Linux Conference 2016.&lt;/p&gt;
&lt;p&gt;So sánh giữa Buildroot và OpenEmbedded/Yocto Project&lt;/p&gt;
&lt;h2&gt;1. Điểm chung&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Đều là build-system cho Embedded Linux.&lt;br /&gt;
Mục tiêu là có thể customize, build hoàn chỉnh một Embedded Linux System.&lt;br /&gt;
Bao gồm: filesystem, toolchain, kernel, bootloaders&lt;/li&gt;
&lt;li&gt;Đều được build từ source&lt;/li&gt;
&lt;li&gt;Sử dụng cross-compilation&lt;/li&gt;
&lt;li&gt;Rất actively trong cả dự án đang maintained và phát triển.&lt;/li&gt;
&lt;li&gt;Được sử dụng rộng dãi trong công nghiệp.&lt;/li&gt;
&lt;li&gt;Tài liệu tốt, nhiều khóa đào tạo.&lt;/li&gt;
&lt;li&gt;Sử dụng Free Software (phần mềm tự do)&lt;br /&gt;
</description>
    </item>
    
    <item>
      <title>Một chút về Driver cho USB Device trong Linux</title>
      <link>localhost:1313/post/2016-08-15-mot-chut-ve-driver-cho-usb-device-trong-linux/</link>
      <pubDate>Mon, 15 Aug 2016 05:47:10 +0900</pubDate>
      
      <guid>localhost:1313/post/2016-08-15-mot-chut-ve-driver-cho-usb-device-trong-linux/</guid>
      <description>&lt;p&gt;Trong loại bài dịch &lt;a href=&#34;https://lazytrick.wordpress.com/2016/01/25/usb-driver-va-usb-device-firmware-se-viet/&#34;&gt;trước đây&lt;/a&gt; nói về USB, tôi có nhắc một chút đến việc load đúng driver thì phía Host làm thế nào?&lt;/p&gt;
&lt;p&gt;Như ta đã biết, khi một thiết bị USB được cắm vào máy (Host), phía Host sẽ thực hiện một loạt thao tác từ xác định nguồn (bus, hay self), lấy thông tin tốc độ, các thông tin về descriptor (thiết bị, giao diện, các Endpoint). Cuối cùng để sử dụng các tính năng chính mà thiết bị cung cấp, thì hệ điều hành phía Host, dù là Windows, hay Linux, hay MacOS sẽ phải load driver tương ứng với thiết bị.</description>
    </item>
    
    <item>
      <title>Cài thêm driver usb-wifi adapter cho bản build Raspbery PI sử dụng Yocto Project</title>
      <link>localhost:1313/post/2016-08-11-cai-them-driver-usb-wifi-adapter-cho-ban-build-raspbery-pi-su-dung-yocto-project-chua-xong/</link>
      <pubDate>Thu, 11 Aug 2016 15:04:03 +0900</pubDate>
      
      <guid>localhost:1313/post/2016-08-11-cai-them-driver-usb-wifi-adapter-cho-ban-build-raspbery-pi-su-dung-yocto-project-chua-xong/</guid>
      <description>&lt;p&gt;Như ta đã làm trong bài trước, sau khi thực hiện việc setup các biến môi trường bằng lệnh &lt;strong&gt;source&lt;/strong&gt;, ta thực hiện build tạo image có có tên là &lt;strong&gt;rpi-basic-image&lt;/strong&gt; thông qua lệnh:&lt;/p&gt;
&lt;p&gt;[code lang=&#34;shell&#34;]&lt;br /&gt;
$bitbake rpi-basic-image&lt;br /&gt;
[/code]&lt;/p&gt;
&lt;p&gt;Thực ra còn 2 image khác ta có thể build đó là &lt;strong&gt;rpi-hwup-image&lt;/strong&gt; &lt;strong&gt;rpi-test-image&lt;/strong&gt;. Ta có thể thấy 2 file bb cho 2 image ở thư mục &lt;strong&gt;meta-raspberrypi/recipes-core/images/&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rpi-hwup-image&lt;/strong&gt; : là image nhỏ nhất (có dịp sẽ thử)&lt;br /&gt;
&lt;strong&gt;rpi-basic-image&lt;/strong&gt;: là image ta vấn dùng đến bây giờ.&lt;br /&gt;
&lt;strong&gt;rpi-test-image&lt;/strong&gt; : là image dùng cho việc test. (có dịp sẽ thử)</description>
    </item>
    
    <item>
      <title>Thiết lập IP mặc định của bản build Linux cho Raspberry PI bằng Yocto Project</title>
      <link>localhost:1313/post/2016-08-06-thiet-lap-ip-mac-dinh-cua-ban-build-linux-cho-raspberry-pi-bang-yocto-project-chua-xong/</link>
      <pubDate>Sat, 06 Aug 2016 17:08:17 +0900</pubDate>
      
      <guid>localhost:1313/post/2016-08-06-thiet-lap-ip-mac-dinh-cua-ban-build-linux-cho-raspberry-pi-bang-yocto-project-chua-xong/</guid>
      <description>&lt;p&gt;Để tiếp tục customize bản OS được build trong bài &lt;a href=&#34;https://lazytrick.wordpress.com/2016/07/29/tao-nas-server-tren-pi-bang-yocto-project/&#34;&gt;trước&lt;/a&gt;.&lt;br /&gt;
Hôm nay ta sẽ thực hiện một nhiệm nhỏ. Đó là thiết lập một IP cho bản build.&lt;br /&gt;
Tức là ta sẽ thiết lập 1 IP mặc định được gán cho Raspberry PI khi nó được khởi động bằng bản build của chúng ta.&lt;/p&gt;
&lt;p&gt;Như thường lệ ta cần thiết lập các biến môi trường trước khi định thực hiện bất cứ thay đổi nào trên bản build.&lt;/p&gt;
&lt;p&gt;[code lang=shell]&lt;br /&gt;
$source poky/oe-init-build-env build&lt;br /&gt;
[/code]&lt;/p&gt;
&lt;p&gt;</description>
    </item>
    
    <item>
      <title>Thêm samba server vào bản build Linux cho Raspberry PI bằng Yocto Project</title>
      <link>localhost:1313/post/2016-08-06-them-samba-server-vao-ban-build-linux-cho-raspberry-pi-bang-yocto-project/</link>
      <pubDate>Sat, 06 Aug 2016 16:05:42 +0900</pubDate>
      
      <guid>localhost:1313/post/2016-08-06-them-samba-server-vao-ban-build-linux-cho-raspberry-pi-bang-yocto-project/</guid>
      <description>&lt;p&gt;Ta đã nói đến việc build một bản phân phối Linux cho Raspberry PI ở bài &lt;a href=&#34;https://lazytrick.wordpress.com/2016/07/29/tao-nas-server-tren-pi-bang-yocto-project/&#34;&gt;Tạo một bản phân phối Linux cho Raspberry PI bằng Yocto Project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Một trong những giao thức truy cập file phổ biến nhất hiên nay là SMB, vốn ban đầu được hỗ trợ trên các máy Windows, dùng cho giao thức chia sẻ file trong mạng nội bộ. Trên Linux, để tạo một server như thế, người ta dùng Samba (cái tên cũng na ná nhỉ).&lt;/p&gt;
&lt;p&gt;Trong bài này, sẽ trình bày cách đưa &lt;strong&gt;Samba&lt;/strong&gt; vào bản phân phối Linux đã được build ở bài trước.&lt;/p&gt;
&lt;p&gt;</description>
    </item>
    
    <item>
      <title>Tạo một bản build Linux cho Raspberry PI bằng Yocto Project</title>
      <link>localhost:1313/post/2016-07-29-tao-nas-server-tren-pi-bang-yocto-project/</link>
      <pubDate>Fri, 29 Jul 2016 08:06:07 +0900</pubDate>
      
      <guid>localhost:1313/post/2016-07-29-tao-nas-server-tren-pi-bang-yocto-project/</guid>
      <description>&lt;p&gt;Ban đầu, dự định sẽ tạo một NAS server theo link tham khảo bên dưới.&lt;br /&gt;
Nhưng thấy ta nên tách riêng phần tạo bản phân phối Linux thành 1 bài riêng, rồi viết các nội dung liên quan đến customize thành các bài khác sẽ dễ hiểu hơn.&lt;br /&gt;
Hơn nữa, phần tạo bản build basic sẽ cần được thảo luận kĩ hơn do có thể phát sinh nhiều vấn đề. Mà nếu không giải quyết được các vấn đề đó thì nội dung các bài khác sẽ không thể thực hiện được.&lt;br /&gt;
Do vậy, bài này sẽ tập trung vào tạo bản basic &lt;strong&gt;rpi-basic-image&lt;/strong&gt; thôi.&lt;/p&gt;
&lt;p&gt;Link tham khảo:&lt;br /&gt;
&lt;a href=&#34;http://mickey-happygolucky.hatenablog.com/entry/2015/02/14/002035&#34;&gt;http://mickey-happygolucky.hatenablog.com/entry/2015/02/14/002035&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;</description>
    </item>
    
    <item>
      <title>[OE] Build một bản Linux cho Raspberry PI B&#43; sử dụng OpenEmbedded</title>
      <link>localhost:1313/post/2015-04-25-oe-build-mot-ban-linux-cho-raspberry-pi-b-su-dung-openembedded/</link>
      <pubDate>Sat, 25 Apr 2015 15:30:15 +0900</pubDate>
      
      <guid>localhost:1313/post/2015-04-25-oe-build-mot-ban-linux-cho-raspberry-pi-b-su-dung-openembedded/</guid>
      <description>Poky là một hệ distro linux ở dạng tham chiếu của Yocto Project.
OpenEmbedded là một phần trong đó.
Nào thế đủ rồi, ta đi vào phần chính.
1. Về Yocto project và ứng dụng cho Rasberry PI Lần trước, tôi có viết một hứng về việc tạo ra một ảnh cho Raspberry dựa trên Raspbian (chụp lại ảnh của một hệ thống đang chạy). Với kết quả lúc trước, thì vấn đề là nó không thực sự nhỏ hơn, khi giải nén ra nó vẫn chiếm khoảng 414MB.</description>
    </item>
    
    <item>
      <title>[OE]Bitbake - Từ Hello World đến một Distro</title>
      <link>localhost:1313/post/2015-04-25-oebitbake-tu-hello-world-den-mot-distro/</link>
      <pubDate>Sat, 25 Apr 2015 07:50:24 +0900</pubDate>
      
      <guid>localhost:1313/post/2015-04-25-oebitbake-tu-hello-world-den-mot-distro/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;{{ site.baseurl }}/assets/user-configuration.png?w=300&#34; alt=&#34;user-configuration&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Bitbake là một công cụ cốt lõi của &lt;a href=&#34;https://www.yoctoproject.org/about&#34;&gt;Yocto Project&lt;/a&gt;. Nó bao gồm 1 bộ thông dịch các script được viết trong các file recipe (công thức tạo phần mềm), và thực hiện các lệnh trong đó. Nó mô tả lại và tự động hóa qúa trình người ta đưa một phần mềm vào một distro.&lt;/p&gt;

&lt;p&gt;Về việc đưa một phần mềm vào distro, ta có thể thấy nó bao gồm vài step chính. Từ việc tải source code (ở đây là tải source code chứ không phải các gói đã được build sẵn đâu nhé, nó gần giống với ArchLinux, Gentoo và hoàn toàn khác với Ubuntu) , thực hiện các bản patch (sửa source hoặc kịch bản build đề phù hợp mục đích sử dụng), biên dịch, cuối cùng là tích hợp vào distro (kèm theo các thông số cấu hình).&lt;/p&gt;

&lt;p&gt;Mục đích của bitbake là tạo ra một quy trình tự động mà đầu vào là các file kịch bản, bitbake sẽ tự làm các công việc còn lại. Ý tưởng của bitbake thực sự rất hay, dù rằng để áp dụng thực tế một cách nuột nà thì cần khá nhiều công sức để hiểu cách nó làm việc với các công cụ truyền thống.&lt;/p&gt;

&lt;p&gt;(Link gốc của &lt;a href=&#34;http://hambedded.org/blog/2012/11/24/from-bitbake-hello-world-to-an-image/&#34;&gt;bài&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;OpenEmbedded (OE) và Yocto Project (YP) sử dụng &lt;strong&gt;Bitbake&lt;/strong&gt; là công cụ chính.&lt;/p&gt;

&lt;p&gt;Sẽ rất có ích cho việc hiểu về OE nếu ta hiểu BitBake ở mức độ nào đó thông qua các task (task ở đây xoanh quanh các xử lý của source code như tải, patch, build như đã nỏi ở trên), các class được định nghĩa trong OE.&lt;/p&gt;

&lt;p&gt;Tài liệu này với mong muốn đưa ra một bức tranh mô tả việc tạo ra một Image (ảnh của một Distro) sử dụng OE và YP. Nó sẽ bắt đầu từ một project rất đơn giản sử dụng bitbake. Thông qua project đó sẽ giải thích các khái niệm quan trọng từ các OE class, cuối cùng là chỉ ra quá trình tạo một Image.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Về Bitbake&lt;/li&gt;
&lt;li&gt;Tải Bitbake&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;1-bitbake-là-cái-gì&#34;&gt;1. BITBAKE là cái gì?&lt;/h2&gt;</description>
    </item>
    
  </channel>
</rss>